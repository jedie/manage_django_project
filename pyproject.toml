[project]
name = "manage_django_project"
dynamic = ["version"]
description = "Helper to develop Django projects."
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
authors = [
    {name = 'Jens Diemer', email = 'git@jensdiemer.de'}
]
requires-python = ">=3.11"
dependencies = [
    "django",  # https://docs.djangoproject.com
    "django-tools",  # https://github.com/jedie/django-tools
    "cli-base-utilities",  # https://github.com/jedie/cli-base-utilities
    "manageprojects",  # https://github.com/jedie/manageprojects
    "bx_py_utils",  # https://github.com/boxine/bx_py_utils
    "django-rich",  # https://github.com/adamchainz/django-rich
    "cmd2",  # https://github.com/python-cmd2/cmd2
]
[dependency-groups]
dev = [
    "cmd2_ext_test",  # https://github.com/python-cmd2/cmd2/tree/master/plugins/ext_test
    "uv",  # https://github.com/astral-sh/uv
    "hatchling",  # https://github.com/pypa/hatch/tree/master/backend
    "playwright",  # https://github.com/microsoft/playwright-python
    "tblib",   # https://github.com/ionelmc/python-tblib
    "nox",  # https://github.com/wntrblm/nox
    "coverage",  # https://github.com/nedbat/coveragepy
    "autopep8",  # https://github.com/hhatto/autopep8
    "pyupgrade",  # https://github.com/asottile/pyupgrade
    "flake8",  # https://github.com/pycqa/flake8
    "flake8-bugbear",  # https://github.com/PyCQA/flake8-bugbear
    "pyflakes",  # https://github.com/PyCQA/pyflakes
    "codespell",  # https://github.com/codespell-project/codespell
    "EditorConfig",  # https://github.com/editorconfig/editorconfig-core-py
    "pip-audit",  # https://github.com/pypa/pip-audit
    "mypy",  # https://github.com/python/mypy
    "twine",  # https://github.com/pypa/twine
    "pre-commit",  # https://github.com/pre-commit/pre-commit
    "typeguard",  # https://github.com/agronholm/typeguard/

    # https://github.com/akaihola/darker
    # https://github.com/ikamensh/flynt
    # https://github.com/pycqa/isort
    # https://github.com/pygments/pygments
    "darker[flynt, isort, color]",

    "tomli",  # https://github.com/hukkin/tomli
]

[project.urls]
Documentation = "https://github.com/jedie/manage_django_project"
Source = "https://github.com/jedie/manage_django_project"

[project.scripts]
# Must be set in ./manage.py and PROJECT_SHELL_SCRIPT:
manage_django_project_example = "manage_django_project_example.__main__:main"


[manage_django_project]
module_name="manage_django_project_example"

# Django settings used for all commands except test/coverage/tox:
local_settings='manage_django_project_example.settings.local'

# Django settings used for test/coverage/tox commands:
test_settings='manage_django_project_example.settings.tests'


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["manage_django_project", "manage_django_project_example"]

[tool.hatch.version]
path = "manage_django_project/__init__.py"


[tool.cli_base]
version_module_name = "manage_django_project" # Used by "update-readme-history" pre-commit hook


[tool.cli_base.pip_audit]
# https://github.com/jedie/cli-base-utilities/blob/main/docs/pip_audit.md
requirements=["requirements.dev.txt"]
strict=true
require_hashes=true
ignore-vuln=[]


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 119
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
skip_glob=['.*', '*/htmlcov/*','*/migrations/*']
known_first_party=['manage_django_project']
line_length=119
lines_after_imports=2


[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
parallel = true
concurrency = ["multiprocessing"]
source = ['.']
command_line = '-m unittest --verbose --locals --buffer'

[tool.coverage.report]
omit = ['.*', '*/tests/*', '*/migrations/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests', 'migrations']


[manageprojects] # https://github.com/jedie/manageprojects
initial_revision = "04d5a25"
initial_date = 2023-03-07T16:25:36+01:00
cookiecutter_template = "https://github.com/jedie/cookiecutter_templates/"
cookiecutter_directory = "managed-django-project"
applied_migrations = [
    "a66e5ae", # 2024-01-16T19:13:13+01:00
    "1f3a70e", # 2024-05-21T21:22:39+02:00
    "52669d0", # 2024-08-02T15:47:04+02:00
    "4662321", # 2025-04-22T20:40:34+02:00
]

[manageprojects.cookiecutter_context.cookiecutter]
full_name = "Jens Diemer"
github_username = "jedie"
author_email = "git@jensdiemer.de"
package_name = "manage_django_project"
django_project_name = "manage_django_project_example"
package_version = "0.0.1"
package_description = "Helper to develop Django projects."
package_url = "https://github.com/jedie/manage_django_project"
issues_url = "https://github.com/jedie/manage_django_project/issues"
license = "GPL-3.0-or-later"
_template = "https://github.com/jedie/cookiecutter_templates/"
applied_migrations = [
    "2281f4b", # 2023-04-02T17:40:58+02:00
    "10c547a", # 2023-04-04T20:37:52+02:00
    "be35344", # 2023-08-17T20:41:16+02:00
    "d6a1665", # 2023-12-17T16:34:59+01:00
]

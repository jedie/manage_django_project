[project]
name = "manage_django_project"
dynamic = ["version"]
description = "Helper to develop Django projects."
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
authors = [
    {name = 'Jens Diemer', email = 'git@jensdiemer.de'}
]
requires-python = ">=3.9,<4" # Keep Python 3.9 until Yunohost contains a newer Python Version ;)
dependencies = [
    "django",
    "django-tools",  # https://github.com/jedie/django-tools
    "cli-base-utilities>=0.4.2",  # https://github.com/jedie/cli-base-utilities
    "manageprojects>=0.15.0",  # https://github.com/jedie/manageprojects
    "bx_py_utils",  # https://github.com/boxine/bx_py_utils
    "django-rich",  # https://github.com/adamchainz/django-rich
    "cmd2",  # https://github.com/python-cmd2/cmd2
]
[project.optional-dependencies]
dev = [
    "cmd2_ext_test",  # https://github.com/python-cmd2/cmd2/tree/master/plugins/ext_test
    "pip-tools",  # https://github.com/jazzband/pip-tools/
    "playwright",  # https://github.com/microsoft/playwright-python
    "tblib",   # https://github.com/ionelmc/python-tblib
    "tox",  # https://github.com/tox-dev/tox
    "coverage",  # https://github.com/nedbat/coveragepy
    "autopep8",  # https://github.com/hhatto/autopep8
    "pyupgrade",  # https://github.com/asottile/pyupgrade
    "flake8",  # https://github.com/pycqa/flake8
    "pyflakes",  # https://github.com/PyCQA/pyflakes
    "codespell",  # https://github.com/codespell-project/codespell
    "EditorConfig",  # https://github.com/editorconfig/editorconfig-core-py
    "safety",  # https://github.com/pyupio/safety
    "mypy",  # https://github.com/python/mypy
    "twine",  # https://github.com/pypa/twine

    # https://github.com/akaihola/darker
    # https://github.com/ikamensh/flynt
    # https://github.com/pycqa/isort
    # https://github.com/pygments/pygments
    "darker[flynt, isort, color]",

    "tomli",  # https://github.com/hukkin/tomli
    #
    # tomli only needed for Python <3.11, but see pip bug:
    # https://github.com/pypa/pip/issues/9644 / https://github.com/jazzband/pip-tools/issues/1866
    #'tomli;python_version<"3.11"',  # https://github.com/hukkin/tomli
]
django32=["django>=3.2,<3.3"]
django41=["django>=4.1,<4.2"]
django42=["django>=4.2,<4.3"]

[project.urls]
Documentation = "https://github.com/jedie/manage_django_project"
Source = "https://github.com/jedie/manage_django_project"

[project.scripts]
# Must be set in ./manage.py and PROJECT_SHELL_SCRIPT:
manage_django_project_example = "manage_django_project_example.__main__:main"


[manage_django_project]
module_name="manage_django_project_example"

# Django settings used for all commands except test/coverage/tox:
local_settings='manage_django_project_example.settings.local'

# Django settings used for test/coverage/tox commands:
test_settings='manage_django_project_example.settings.tests'


[build-system]
requires = ["setuptools>=61.0", "setuptools_scm>=7.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["manage_django_project*", "manage_django_project_example*"]

[tool.setuptools.dynamic]
version = {attr = "manage_django_project.__version__"}


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 119
verbose = true
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
flynt = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
skip_glob=['.*', '*/htmlcov/*','*/migrations/*']
known_first_party=['manage_django_project']
line_length=119
lines_after_imports=2


[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
source = ['.']
command_line = '-m manage_django_project_example test --shuffle --parallel --buffer'

[tool.coverage.report]
omit = ['.*', '*/tests/*', '*/migrations/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.tox]  # https://tox.wiki/en/latest/config.html#pyproject-toml
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{311,310,39}-django{42,41,32}
skip_missing_interpreters = True

[testenv]
passenv = *
skip_install = true
commands_pre =
    pip install -U pip-tools
    django32: pip-sync requirements.django32.txt
    django41: pip-sync requirements.django41.txt
    django42: pip-sync requirements.django42.txt
commands =
    django32: {envpython} -m coverage run --context='{envname}' -m manage_django_project_example test --buffer
    django41: {envpython} -m coverage run --context='{envname}' -m manage_django_project_example test --buffer --shuffle --parallel
    django42: {envpython} -m coverage run --context='{envname}' -m manage_django_project_example test --buffer --shuffle --parallel
"""


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests', 'migrations']


[manageprojects] # https://github.com/jedie/manageprojects
initial_revision = "04d5a25"
initial_date = 2023-03-07T16:25:36+01:00
cookiecutter_template = "https://github.com/jedie/cookiecutter_templates/"
cookiecutter_directory = "managed-django-project"

[manageprojects.cookiecutter_context.cookiecutter]
full_name = "Jens Diemer"
github_username = "jedie"
author_email = "git@jensdiemer.de"
package_name = "manage_django_project"
package_version = "0.0.1"
package_description = "Helper to develop Django projects."
package_url = "https://github.com/jedie/manage_django_project"
issues_url = "https://github.com/jedie/manage_django_project/issues"
license = "GPL-3.0-or-later"
_template = "https://github.com/jedie/cookiecutter_templates/"
applied_migrations = [
    "2281f4b", # 2023-04-02T17:40:58+02:00
    "10c547a", # 2023-04-04T20:37:52+02:00
    "be35344", # 2023-08-17T20:41:16+02:00
]
